{"version":3,"sources":["serviceWorker.js","App.js","pages/Cookie.js","pages/consts.js","config/menuConfig.js","components/NavLeft/index.js","components/Header/index.js","admin.js","pages/common.js","components/frFetch.js","pages/Login/index.js","pages/AccountManage/resetPassword.js","config/styleConfig.js","pages/AdminItemManage/tableListConfig.js","pages/AdminItemManage/index.js","pages/AdminUserManage/tableListConfig.js","pages/AdminUserManage/index.js","pages/InvestWarehouse/index.js","pages/ItemWarehouse/tableListConfig.js","pages/ItemWarehouse/index.js","pages/MyItemManage/index.js","pages/AdminItemManage/additem.js","pages/AdminUserManage/addUser.js","pages/MyItemManage/itemDetails/itemSituation.js","pages/MyItemManage/itemDetails/itemTL.js","pages/MyItemManage/itemDetails.js","pages/ItemWarehouse/intentionItem.js","pages/ItemWarehouse/addIntentionItem.js","router.js","index.js"],"names":["Boolean","window","location","hostname","match","App","react_default","a","createElement","this","props","children","Component","judgeAry","ary","toString","setCookie","obj","arguments","length","undefined","Array","isArray","judgeObj","newObj","Object","esm_extends","_obj$expires_in","expires_in","time","newtiem","Date","setTime","getTime","expires","toUTCString","keys","map","i","document","cookie","console","log","getCookie","cokie","split","name","forEach","x","index","vul","trim","indexOf","substring","checkCookie","JSON","stringify","cookieConfig","CODE_SUCCESS","CODE_UNLOGIN","menuList","title","key","SubMenu","Menu","NavLeft","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","showDrawer","setState","visible","onClose","renderMenu","data","item","icon","type","menu","Item","NavLink","to","onClick","action","state","menuTreeNode","MenuConfig","user_admin","splice","className","defaultSelectedKeys","defaultOpenKeys","selectedKeys","history","pathname","mode","theme","React","withRouter","Header","toggleCollapsed","collapsed","fn","handleReload","goBack","setTimeout","goForward","handleExit","jrFetchPost","then","res","href","removeCookie","userName","userInfo","user_name","row","col","span","es_button","style","marginBottom","size","avatar","backgroundColor","Headers","SpinLogin","Admin","loading","assertThisInitialized","push","replace","drawer","placement","closable","width","mask","src_components_NavLeft","src_components_Header","spin","tip","spinning","delay","Index","Form","create","stateAllfetchArr","updateFetchState","pop","setLogin","jrFetchGet","jrApi","fetchPrm","initPrm","assign","Promise","resolve","requestApi","successFun","errorFun","token","access_token","fetchStr","concat","encodeURIComponent","fetch","credentials","resp","json","catch","fetchGet","ret","code","message","info","msg","err","formData","url","method","headers","Content-Type","body","fetchPost","equalNull","text","queryNull","judgeState","dateShift","date","oldDate","timeYear","getFullYear","timeMonth","getMonth","timeDate","getDate","getPagination","page","pageSize","dataList","sort","pageLen","b","a_establish_time","establish_time","b_establish_time","reverse","len","dataSource","FormItem","handleSubmit","form","getFieldsValue","password","phone","md5","validateFields","values","objectSpread","getFieldDecorator","es_form","initialValue","rules","required","pattern","input","prefix","placeholder","xs","sm","valuePropName","es_checkbox","tooltip","AccountManage","context","formObj","new_pwd_set","new_pwd","warn","handleClear","resetFields","formItemLayoutShort","labelCol","wrapperCol","offset","marginTop","resetPassword_FormItem","label","disabled","value","marginRight","PureComponent","styleConfig","formItemLayout","formItemStyle","maxStyle","minStyle","TableListConfig","getItemList","_getPagination","projects","dataInfo","nextProps","nextContext","_this2","columns","align","dataIndex","render","t","r","Link","id","first_industry","users","wordWrap","it","round","phase","currency_info","currency","amount","defaultSortOrder","table","pagination","rowKey","bordered","Tablelist","Option","Select","handleSeek","itemInfo","start_time","_d","end_time","getVule","_getPagination2","_ref","_ref$phase","_ref$users","_ref$state","_ref$round","_ref$first_industry","locale_provider","locale","zhCN","AdminItemManage_FormItem","es_select","date_picker","tableListConfig","defaultPageSize","pageSizeOptions","total","showSizeChanger","showQuickJumper","onChange","v","onShowSizeChange","getUserList","overallMessage","success","handleDelete","handleEdit","userOff","userOn","userReset","getProjects","more","constructor","sorter","is_active","record","config","popconfirm","onConfirm","okText","cancelText","project","Number","listData","_ref$data","AdminUserManage_FormItem","tiem","AdminUserManage_Option","marginLeft","AdminUserManage_tableListConfig","ItemWarehouse_FormItem","ItemWarehouse_Option","AdminItemManage","moment","TextArea","Input","Additem","pause_time","staffing","names","pid","handleShow","evolve","getStateValue","e","stateValue","login","search","substr","_this3","_this$state$dataInfo","contract_state","_this$state$dataInfo$","pause_reason","progress","agency_history","second_industry","_ref$currency","info_currency","info_state","info_phase","info_round","infofirst_industry","_ref$contract_state","info_contract_state","additem_FormItem","additem_Option","autosize","minRows","maxRows","s","created_at","height","AddUser","md5Password","uid","projects_list","projectsData","user","dataUser","_ref$name","_ref$phone","_ref$email","email","_ref2$data","addUser_FormItem","toConsumableArray","addUser_Option","confirm","Modal","ItemSituation","handleRemove","onOk","onCancel","_ref$info","info_first_industry","hasOwnProperty","ItemSituations","ItemTl","es_progress","percent","strokeColor","itemTL_FormItem","itemTL_Option","TabPane","Tabs","ItemDetails","tabs","defaultActiveKey","animated","tab","itemSituation","itemTL","AddIntentionItem","addIntentionItem_FormItem","addIntentionItem_TextArea","myRouter","BrowserRouter","src_App","Switch","Route","path","component","Login","src_admin","AddItem","IntentionItem","AdminUserManage","InvestWarehouse","ItemWarehouse","MyItemManage","ReactDOM","router","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51290cd4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\nclass App extends Component {\n  render() {\n\n    return (\n        <div>\n          {this.props.children}\n        </div>\n    );\n  }\n}\n\nexport default App;","//检测常规不符合参数\nfunction judgeAry(ary) {\n    if (ary !== null && ary !== 'null' && ary.toString() !== '[object Object]' && typeof ary !== \"number\" && typeof ary !== \"string\") {\n        return true\n    }\n    return false\n}\nfunction judgeObj(obj) {\n    if (obj !== null && obj !== 'null' && !Array.isArray(obj) && typeof obj !== \"number\" && typeof obj !== \"string\") {\n        return true\n    }\n    return false\n}\n\n//设置Cookie参数为对象 expires_in为时间单位为秒，可按需修改变量不传默认为0\nexport function setCookie(obj = {}) {\n    if (judgeObj(obj)) {\n        let {...newObj} = obj, {expires_in: time = 0} = obj, newtiem = new Date();\n        delete newObj.expires_in;\n        newtiem.setTime(newtiem.getTime() + (time * 1000));\n        let expires = \";expires=\" + newtiem.toUTCString();\n        Object.keys(newObj).map(i => {\n            return document.cookie = i + '=' + obj[i] + expires +';path=/'\n        })\n    } else {\n        console.log('传参错误,请传对象{a:1,b:2}形式')\n    }\n}\n\n//获取Cookie 参数为数组 返回对象\nexport function getCookie(ary = []) {\n    if (judgeAry(ary)) {\n        let cokie = document.cookie.split(';');\n        let obj = {};\n        ary.map(i => {\n            let name = i + '=';\n            cokie.forEach((x, index) => {\n                let vul = cokie[index].trim();\n                if (vul.indexOf(name) == 0) {\n                    obj[i] = vul.substring(name.length, vul.length);\n                }\n            })\n        })\n        return obj;\n    } else {\n        console.log('传参错误,请传数组[1，2，3]形式')\n    }\n}\n//删除Cookie\nexport function removeCookie(ary = []) {\n    if(judgeAry(ary)){\n        let obj = getCookie(ary);\n        obj['expires_in']= -18000 ;\n        setCookie(obj);\n        window.location.href = '/login';\n    }\n}\n//检测Cookie 参数为数组 返回布尔值\nexport function checkCookie(ary = []) {\n    if(judgeAry(ary)){\n        return JSON.stringify(getCookie(ary)) === '{}' ? false : true;\n    }\n    return false\n}\n\n//查询配置\nexport const cookieConfig = ['access_token','token_type','user_admin','user_name','password','phone'];","export const STATE_EDIT = 0;\nexport const STATE_ADD = 1;\n\nexport const Tip_SUCCESS = 'success';\nexport const Tip_INFO = 'info';\nexport const Tip_WARNING = 'warning';\nexport const Tip_ERROR = 'error';\nexport const Tip_FAILED = 'failed';\n\nexport const MSG_GETED = '获取数据成功';\nexport const MSG_GETING = '正在获取数据';\nexport const MSG_DELED = '删除成功';\nexport const MSG_SUCCESS = 'OK';\n\nexport const DATA_INNIT = 'DATA_INNIT';\n\nexport const COMMON_HOLDER = '';\n\nexport const LOADING = 'loading';\nexport const NOT_LOAD = 'NOT_LOAD';\n\nexport const STATUS =  true;\nexport const CODE_SUCCESS = 0;\nexport const CODE_UNLOGIN = 2010;\n\n\nexport const TYPE_A = '1';/* 内部页面 外部页面 */\nexport const TYPE_B = '2';\n\nexport const SUDAI = 'sudai';\nexport const JIEBA = 'jieba';\nexport const KAMAO = 'kamao';\nexport const APPLY = 'apply';\n\n\nexport const NAVMANAGE = 'nav_manage';\nexport const TABMANAGE = 'tab_manage';\nexport const LOANMANAGE = 'loan_manage';\nexport const MODULEMANAGE = 'module_manage';\nexport const VERSIONMANAGE = 'version_manage';\nexport const PACKAGEMANAGE = 'package_manage';\nexport const LISTEMANAGE = 'list_manage';\n\nexport const CHANNELMANAGE = 'channel_manage';\nexport const VIPCHANNELMANAGE = 'VIPchannel_manage';\n\n\nexport const OPTIONS = [\n    { label: 'android', value: '1' },\n    { label: 'ios', value: '2' }\n];","const menuList = [\n    {\n        title: '项目管理',\n        key: '/admin/adminitemmanage',\n    },\n    {\n        title: '用户管理',\n        key: '/admin/adminusermanage',\n    },\n    {\n        title: '我的项目',\n        key: '/admin/myitemmanage',\n    },\n    {\n        title: '项目公司库',\n        key: '/admin/itemwarehouse'\n    },\n    {\n        title: '投资机构库',\n        key: '/admin/investwarehouse'\n    },\n    {\n        title: '账户管理',\n        key: '/admin',\n        children: [\n            {\n                title: '密码修改',\n                key: '/admin/accountmanage'\n            }\n        ]\n    }\n]\n\nexport default menuList;","import React from 'react';\nimport {Menu, Icon} from 'antd';\nimport MenuConfig from './../../config/menuConfig';\nimport {NavLink, withRouter} from 'react-router-dom';\nimport './index.less';\nimport {getCookie, cookieConfig} from '../../pages/Cookie';\n\nconst SubMenu = Menu.SubMenu;\n\nclass NavLeft extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            menuTreeNode: null,\n            visible: false\n        }\n    }\n\n\n    componentDidMount() {\n        let menuList = this.renderMenu(MenuConfig);\n        const userInfo = getCookie(cookieConfig);\n        let menuTreeNode = userInfo.user_admin === 'true' ? (menuList.splice(2, 1), menuList) : menuList.splice(2);\n        this.setState({\n            menuTreeNode\n        })\n\n    }\n\n    showDrawer = () => {\n        this.setState({\n            visible: true,\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            visible: false,\n        });\n    };\n\n    render() {\n        return (\n\n            <div className={'navBox'}>\n                <p className={'logo'}>灵犀资本管理系统</p>\n                <Menu\n                    defaultSelectedKeys={['1']}\n                    defaultOpenKeys={['sub1']}\n                    selectedKeys={[this.props.history.location.pathname]}\n                    mode=\"inline\"\n                    theme=\"dark\"\n                >\n                    {this.state.menuTreeNode}\n                </Menu>\n            </div>\n\n        )\n    }\n\n\n    /*导航渲染*/\n    renderMenu = (data) => {\n        return data.map((item) => {\n                let {title, key} = item;\n                if (item.children) {\n                    return (\n                        <SubMenu\n                            title={<span><Icon type=\"mail\"/>{title}</span>} key={key}\n                        >\n                            {this.renderMenu(item.children)}\n                        </SubMenu>\n                    )\n                }\n                return (\n                    <Menu.Item key={key}>\n                        <Icon type={'pie-chart'}/>\n                        <NavLink to={key} onClick={this.action}>{title}</NavLink>\n                    </Menu.Item>\n                )\n            }\n        )\n    }\n\n}\n\nexport default withRouter(NavLeft)","import React from 'react';\nimport {Col, Row, Button, Icon, Avatar} from \"antd\";\nimport {checkCookie, cookieConfig, getCookie, removeCookie} from \"../../pages/Cookie\";\nimport {withRouter} from 'react-router';\nimport './index.less';\nimport {jrFetchGet, jrFetchPost} from \"../../pages/common\";\n\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: null,\n            collapsed: false\n        }\n    }\n\n    componentDidMount() {\n        const userInfo = getCookie(cookieConfig);\n        checkCookie(cookieConfig) && this.setState({\n            userName: userInfo.user_name,\n        })\n    }\n\n    render() {\n        return (\n            <div className={'header'}>\n                <Row>\n                    <Col span={2}>\n                        <Button type=\"primary\" onClick={this.toggleCollapsed} style={{marginBottom: 16}}\n                                className={'navBtn'}>\n                            <Icon type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}/>\n                        </Button>\n                    </Col>\n                    <Col span={22} className={'headerTop'}>\n                        <Button size=\"small\" onClick={this.handleReload}>刷新</Button>\n                        <span>\n                            <Avatar style={{backgroundColor: '#001529'}} size=\"small\" icon=\"user\"/>&nbsp;&nbsp;\n                            <i>{this.state.userName}</i>\n                            </span>\n                        <Button size=\"small\" onClick={this.handleExit}>退出</Button>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n    //显示隐藏导航\n    toggleCollapsed = () => {\n        this.setState({\n            collapsed: !this.state.collapsed\n        })\n        this.props.fn();\n    }\n    //刷新页面\n    handleReload = () => {\n        this.props.history.goBack();\n        setTimeout(() => {\n            this.props.history.goForward();\n        }, 1000 / 60)\n\n    }\n    //退出\n    handleExit = () => {\n        jrFetchPost(`/ng-lingxi/api/user/logout`).then(res => {\n            removeCookie(cookieConfig)\n        })\n    }\n}\n\nconst Headers = withRouter(Header)\nexport default Headers;","import React from 'react';\nimport {Row, Col, Drawer, Spin, Form} from \"antd\";\nimport NavLeft from \"./components/NavLeft\";\nimport Header from \"./components/Header\";\nimport {withRouter} from 'react-router';\nimport 'antd/dist/antd.less';\nimport './admin.less';\nimport {getCookie, checkCookie, cookieConfig} from './pages/Cookie';\n\n//加载模块\nexport let SpinLogin = null;\n\n\nclass Admin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapsed: true,\n            loading: false\n        }\n        SpinLogin = this;\n    }\n\n    componentDidMount() {\n        const userInfo = getCookie(cookieConfig);\n        if (!checkCookie(cookieConfig)) {\n            window.location.replace(`/login`)\n        }else {\n            userInfo.user_admin === 'true' ? this.props.history.push(`/admin/adminitemmanage`) : this.props.history.push(`/admin/myitemmanage`);\n        }\n    }\n\n    render() {\n        return (\n            <div className={'admin-content'}>\n\n                <Row>\n                    {\n                        <Col span={4}>\n                            <Drawer\n                                placement='left'\n                                closable={false}\n                                onClose={this.onClose}\n                                visible={this.state.collapsed}\n                                width='16.7%'\n                                mask={false}\n                            >\n                                <NavLeft/>\n                            </Drawer>\n                        </Col>\n                    }\n                    <Col span={this.state.collapsed ? 20 : 24} className={'admintop'}>\n                        <Header fn={this.toggleCollapsed}/>\n                        <Row className={'content'}>\n                            {this.props.children}\n                            {\n                                this.state.loading &&\n                                <div className={'spin'}>\n                                    <Spin tip=\"Loading...\" spinning={true} delay={500} size=\"large\"/>\n                                </div>\n                            }\n                        </Row>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n    //导航切换\n    toggleCollapsed = () => {\n        this.setState({\n            collapsed: !this.state.collapsed,\n        });\n    }\n\n    //loading\n    setLogin(loading) {\n        this.setState({loading})\n    }\n}\nconst Index = withRouter(Admin)\nexport default Form.create()(Index);\n","import {fetchGet, fetchPost, fetchPostFile} from '../components/frFetch'\nimport moment from 'moment'\nimport {CODE_SUCCESS, CODE_UNLOGIN} from './consts'\nimport React from 'react'\nimport {SpinLogin} from '../admin'\nimport message from 'antd/lib/message';\nimport notification from 'antd/lib/notification';\n\n\nconst stateAllfetchArr = []\n\nexport function getParamsType(obj) {\n    return ({}).toString.call(obj).match(/\\s([a-zA-Z]+)/)[1].toLowerCase()\n}\n\nexport const renderNull = (item) => item || '-';\n\n\nexport function changeGlobalFetchState() {\n    if (stateAllfetchArr.length > 0) {\n        SpinLogin.setLogin(true)\n    } else {\n        SpinLogin.setLogin(false)\n    }\n}\n\nexport function updateFetchState(state) {\n    state ? stateAllfetchArr.push(1) : stateAllfetchArr.pop()\n    changeGlobalFetchState()\n}\n\nexport function jrFetchGet(jrApi, fetchPrm, loading = true) {\n    const initPrm = {}\n\n    for (const item in fetchPrm) {\n        typeof fetchPrm[item] === 'undefined' && (fetchPrm[item] = '')\n    }\n\n    Object.assign(initPrm, fetchPrm)\n\n    return new Promise(resolve => {\n        loading && updateFetchState(true)\n        fetchGet(jrApi, initPrm, ret => {\n            // successFun\n            loading && updateFetchState(false)\n            switch (ret.code) {\n                case CODE_SUCCESS:\n                    resolve(ret)\n                    break\n                case CODE_UNLOGIN:\n                    message.info(ret.message || ret.msg)\n                    window.location.href = '/admin'\n                    break\n                default:\n                    message.info(ret.message || ret.msg)\n                    window.location.href = '/login'\n            }\n        }, err => {\n            // errorFun\n            loading && updateFetchState(false)\n            message.info(err)\n        })\n    })\n}\n\nexport function jrFetchPost(jrApi, fetchPrm, loading = true) {\n    const initPrm = {}\n\n    for (const item in fetchPrm) {\n        typeof fetchPrm[item] === 'undefined' && (fetchPrm[item] = '')\n    }\n\n    Object.assign(initPrm, fetchPrm)\n\n    loading && updateFetchState(true)\n\n    return new Promise(resolve => {\n        fetchPost(jrApi, initPrm, ret => {\n            // successFun\n            loading && updateFetchState(false)\n            switch (ret.code) {\n                case CODE_SUCCESS:\n                    resolve(ret)\n                    break\n                case CODE_UNLOGIN:\n                    message.info(ret.message || ret.msg)\n                    window.location.href = '/admin'\n                    break\n                default:\n                    message.info(ret.message || ret.msg)\n                    window.location.href = '/login'\n            }\n        }, err => {\n            // errorFun\n            loading && updateFetchState(false)\n            message.info(err)\n        })\n    })\n}\n\nexport function jrFetchPostFile(jrApi, fetchPrm, loading) {\n    const formData = new FormData()\n\n    for (const item in fetchPrm) {\n        typeof fetchPrm[item] === 'undefined' && (fetchPrm[item] = '')\n        formData.append(item, fetchPrm[item])\n    }\n\n    loading && updateFetchState(true)\n    return new Promise(resolve => {\n        fetchPostFile(jrApi, formData, ret => {\n            // successFun\n            loading && updateFetchState(false)\n            switch (ret.code) {\n                case CODE_SUCCESS:\n                    resolve(ret)\n                    break\n                case CODE_UNLOGIN:\n                    message.info(ret.message || ret.msg)\n                    window.location.href = '/admin'\n                    break\n                default:\n                    message.info(ret.message || ret.msg)\n                    window.location.href = '/login'\n            }\n        }, err => {\n            // errorFun\n            loading && updateFetchState(false)\n            message.info(err)\n        })\n    })\n}\n\nexport const jrTip = function (type, msg, des, duration = 4.5) {\n    // success info warning error\n    notification[type]({\n        message: msg,\n        description: des,\n        duration\n    })\n}\n\nexport const formItemLayout = {\n    labelCol: {\n        xs: {span: 24},\n        sm: {span: 5},\n    },\n    wrapperCol: {\n        xs: {span: 24},\n        sm: {span: 14},\n    }\n}\n\nexport const getRouteString = (routeArray, index) => {\n    let rs = ''\n    for (let i = 0; i < index; i++) {\n        rs = rs + routeArray[i]['path'] + '/'\n    }\n    return rs\n}\n\nexport const fun_date = (days) => {\n    const date1 = new Date()\n    const date2 = new Date(date1)\n    date2.setDate(date1.getDate() + days)\n    const time2 = date2.getFullYear() + '-' + (date2.getMonth() + 1) + '-' + date2.getDate()\n\n    return time2\n}\n\nexport const formatDate = (now, flag = true) => {\n    const year = now.getFullYear()\n    const month = now.getMonth() + 1\n    const date = now.getDate()\n    const hour = now.getHours()\n    const minute = now.getMinutes()\n    const second = now.getSeconds()\n    if (flag) {\n        return year + '-' + month + '-' + date + '   ' + hour + ':' + minute + ':' + second\n    }\n    return year + '-' + month + '-' + date\n}\n\nexport const getLoadigOption = () => {\n    const option = {\n        color: '#108EE9',\n        textColor: '#000',\n        maskColor: 'rgba(255, 255, 255, 0.8)',\n        zlevel: 0\n    }\n    return option\n}\n\n// 获取时间格式为YYYY-MM-DD  参数为  -1 前一天  1 后一天\nexport const getDefaultDate = (day) => {\n    let defaultDay = ''\n    let now = new Date()\n    now = Date.parse(now)\n    if (day) {\n        if (day < 0) {\n            day = +day\n        }\n        defaultDay = now + day * 24 * 60 * 60 * 1000\n        defaultDay = moment(defaultDay).format('YYYY-MM-DD')\n    } else {\n        defaultDay = moment().format('YYYY-MM-DD')\n    }\n    return defaultDay\n}\n\n// 格式化checkbox项的值\nexport const getOpt = (obj, name = 'name', id = 'id') => {\n\n    return obj.map(item => ({label: item[name], value: item[id]}))\n\n}\n// 获取checkbox select 选中的值\nexport const getOptSelect = (obj = [], id = 'id', select = 'selected') => {\n\n    const objData = obj[0]\n    if (getParamsType(objData) === 'array') {\n        return objData.filter(v => +v[select]).map(v => v[id])\n    }\n\n    console.error(`数据源不是array: ${getParamsType(objData)}`)\n    return []\n}\n\n// 遍历select option 的值\nexport const getSelectOpt = (obj, id = 'value', label = 'label') => {\n    const data = []\n    obj && obj.map((v) => {\n        if (getParamsType(v) === 'object') {\n            data.push(<option key={v[id]} value={v[id]}>{v[label]}</option>)\n        } else {\n            data.push(<option key={v} value={v}>{v}</option>)\n        }\n    })\n    return data\n}\n\nexport const formatRange = (type, momentFlag = false, format = 'YYYY-MM-DD') => {\n\n    const date = new Date()\n    const res = []\n    const millisecond = 1000 * 60 * 60 * 24\n    switch (type) {\n        case 1:\n            res.push(formatDate(date))\n            res.push(formatDate(new Date(date.getTime() + (type * millisecond))))\n            break;\n        case 7:\n            const week = date.getDay()\n            const minusDay = week !== 0 ? week - 1 : 6\n            res.push(new Date(date.getTime() - (minusDay * millisecond)))\n            res.push(formatDate(new Date(res[0].getTime() + type * millisecond)))\n            res[0] = formatDate(res[0])\n            break;\n        case 30:\n            const nowMonth = date.getMonth()\n            const nowYear = date.getFullYear()\n            res.push(new Date(nowYear, nowMonth, 1))\n            res.push(formatDate(new Date(nowYear, nowMonth + 1, 1)))\n            res[0] = formatDate(res[0])\n            break;\n    }\n    if (!momentFlag) {\n        return res\n    }\n    return [moment(res[0], format), moment(res[1], format)]\n\n}\n\nexport const formateFormVal = (obj, str = '请选择', replaceStr = '') => {\n    if (getParamsType(obj) !== 'object') {\n        console.error('数据源（obj）请传入JSON对象')\n        return {}\n    }\n    Object.keys(obj).map(v => {\n        (obj[v].indexOf(str) !== -1) && (obj[v] = replaceStr)\n    })\n    return obj\n}\n\n// 字段是否为空\nexport function equalNull(text) {\n    if (text === 'undefined' || text === 'null') {\n        return true\n    }\n    if (text || text === 0) {\n        return false\n    }\n    return true\n}\n\n// 生成id\nexport function createId() {\n    return Math.random().toString().slice(13) + new Date().getTime().toString().slice(5)\n}\n\n// 解析url查询字符串\nexport function parseSearchStr(searchStr) {\n    const ret = {}\n    if (equalNull(searchStr)) {\n        return ret\n    }\n    searchStr.replace('?', '').split('&')\n        .forEach(item => {\n            const arr = item.split('=')\n            ret[arr[0]] = arr[1]\n        })\n    return ret\n}\n\n//检测是否是空对象或数组\nexport function queryNull(obj) {\n\n    if (JSON.stringify(obj) === '[]' || JSON.stringify(obj) === '{}') {\n        return true\n    }\n    if (obj == 'undefined' || obj == 'null' || obj == null) {\n        return true\n    }\n    return false\n\n\n}\n\n//判断state状态\nexport function judgeState(text) {\n    if (typeof text === 'undefined' || text === 'null') {\n        return false\n    }\n    if (text === 0 || text === 1) {\n        return false\n    }\n    return true\n}\n\n//日期转换\nexport function dateShift(date) {\n    let oldDate = new Date(date),\n        timeYear = oldDate.getFullYear(),\n        timeMonth = oldDate.getMonth() + 1,\n        timeDate = oldDate.getDate() - 1;\n    let newDate = timeYear + '-' + (timeMonth < 10 ? '0' + timeMonth : timeMonth) + '-' + (timeDate < 10 ? '0' + timeDate : timeDate);\n    return newDate\n}\n\n//分页\nfunction judgeObj(obj) {\n    if (obj !== null && obj !== 'null' && !Array.isArray(obj) && typeof obj !== \"number\" && typeof obj !== \"string\") {\n        return true\n    }\n    return false\n}\n//obj是对象传入页码，每页显示条数，data数据，sort排序方式\nexport function getPagination(obj) {\n    if (judgeObj(obj)) {\n        let {page, pageSize, dataList ,sort} = obj;\n        let pageLen = dataList.length;\n        switch (sort) {\n            case 'date':\n                dataList.sort((a, b) => {\n                    let {establish_time: a_establish_time} = a;\n                    let {establish_time: b_establish_time} = b;\n                    a_establish_time === null ? a_establish_time = 0 : a_establish_time = a_establish_time.toString().replace(/-/g, '');\n                    b_establish_time === null ? b_establish_time = 0 : b_establish_time = b_establish_time.toString().replace(/-/g, '');\n                    return a_establish_time - b_establish_time\n                }).reverse();\n                break;\n        }\n\n        let ary = [], len = (page-1) * pageSize + pageSize, start = (page-1) * pageSize;\n        for (let i = start; i < len; i++) {\n            if (!!dataList[i]) {\n                ary.push(dataList[i])\n            }\n        }\n        let newObj = {pageLen:pageLen,dataSource:ary};\n        return  newObj\n    }\n}","/****\n * fetchGet，fetchPost只包装了最基础的请求，特殊需求，直接使用fetch来编码\n * 参考：https://developer.mozilla.org/zh-CN/docs/Web/API/Fetch_API/Using_Fetch\n */\nimport {getCookie,checkCookie,cookieConfig} from '../pages/Cookie'\nexport function fetchGet(requestApi, fetchPrm, successFun, errorFun) {\n  let userInfo = getCookie(cookieConfig);\n  let token = checkCookie(cookieConfig) ? userInfo.access_token : \"\"\n  let fetchStr = `${requestApi}?`\n\n  for (let item in fetchPrm) {\n    fetchStr = fetchStr + `${item}=${encodeURIComponent(fetchPrm[item])}&`\n  }\n  fetchStr += `token=${token}`\n  fetchStr = fetchStr.replace(/(&|\\?)$/, '')\n\n  fetch(fetchStr, { credentials: 'include', mode: 'no-cors' })\n  .then(resp => resp.json())\n  .then(data => {\n    successFun(data, fetchStr)\n  })\n  .catch(() => {\n    errorFun && errorFun(`后台错误, GET: ${requestApi}`)\n  })\n}\n\nexport function fetchPost(requestApi, fetchPrm, successFun, errorFun) {\n  let userInfo = getCookie(cookieConfig);\n  let token = checkCookie(cookieConfig) ? userInfo.access_token : \"\"\n  let formData = ''\n\n  for (let item in fetchPrm) {\n    formData = formData + `${item}=${encodeURIComponent(fetchPrm[item])}&`\n  }\n  formData += `token=${token}`\n  formData = formData.replace(/&$/, '')\n\n  const url = requestApi + '**' + formData\n\n  fetch(requestApi, {\n    credentials: 'include',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    },\n    body: formData\n  })\n  .then(resp => resp.json())\n  .then(data => {\n    successFun(data, url)\n  })\n  .catch(() => {\n    errorFun && errorFun(`后台错误, POST: ${requestApi}`)\n  })\n}\n\nexport function fetchPostFile(requestApi, fetchPrm, successFun, errorFun) {\n  fetch(requestApi, {\n    credentials: 'include',\n    method: 'POST',\n    body: fetchPrm\n  })\n  .then(resp => resp.json())\n  .then(data => {\n    successFun(data)\n  })\n  .catch(() => {\n    errorFun && errorFun(`后台错误, POST: ${requestApi}`)\n  })\n}\n","import React, {Component} from 'react';\nimport {Button, Form, Input, Icon, Checkbox, Tooltip, Row, Col} from 'antd';\nimport {jrFetchPost} from \"../common\";\nimport {cookieConfig, setCookie, checkCookie, getCookie} from '../Cookie';\nimport md5 from 'md5';\nimport './index.less';\n\nconst FormItem = Form.Item;\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n        if (checkCookie(cookieConfig)) {\n            let userInfo = getCookie(cookieConfig);\n            userInfo.user_admin === 'true' ? this.props.history.push(`/admin/adminitemmanage`) : this.props.history.push(`/admin/myitemmanage`);\n        }\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        return (\n            <div className=\"login\">\n                <div className=\"content\">\n                    <p className=\"title\">灵犀资本管理系统</p>\n                    <div className=\"box\">\n                        <Form>\n                            <FormItem>\n                                {\n                                    getFieldDecorator('phone', {\n                                        initialValue: '',\n                                        rules: [\n                                            {\n                                                required: true,\n                                                message: '用户名不能为空'\n                                            },\n                                            {\n                                                len: 11,\n                                                message: '请输入手机号'\n                                            },\n                                            {\n                                                pattern: /^\\d+$/g,\n                                                message: '手机号必须为数字'\n                                            },\n                                        ]\n                                    })(\n                                        <Input prefix={<Icon type=\"user\"/>} placeholder={'请输入手机账号'}/>\n                                    )\n                                }\n\n                            </FormItem>\n                            <FormItem>\n                                {\n                                    getFieldDecorator('password', {\n                                        initialValue: '',\n                                        rules: [\n                                            {\n                                                required: true,\n                                                message: '密码不能为空'\n                                            }\n                                        ]\n                                    })(\n                                        <Input type=\"password\" prefix={<Icon type=\"lock\"/>} placeholder={'请输入密码'}/>\n                                    )\n                                }\n                            </FormItem>\n                            <Row>\n                                <Col xs={{span: 24}} sm={{span: 12}}>\n                                    <FormItem>\n                                        {\n                                            getFieldDecorator('remember', {\n                                                valuePropName: 'checked',\n                                                initialValue: true\n                                            })(\n                                                <Checkbox className={'setpswd'}>记住密码</Checkbox>\n                                            )\n                                        }\n                                    </FormItem>\n                                </Col>\n                                <Col xs={{span: 24}} sm={{span: 12}}>\n                                    <Tooltip placement=\"bottomRight\" title={\n                                        '普通用户请联系admin,admin用户请联系工作人员重置密码'\n                                    }>\n                                        <p className={'forget'}>忘记密码？</p>\n                                    </Tooltip>\n                                </Col>\n                            </Row>\n                            <FormItem>\n                                <Button onClick={this.handleSubmit} className={'button'}>登录</Button>\n                            </FormItem>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleSubmit = () => {\n        let userInfo = this.props.form.getFieldsValue();\n        let {password, phone} = userInfo;\n        let loading = false;\n        password = md5(password)\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                jrFetchPost(' /ng-lingxi/api/user/login', {\n                    password, phone\n                }, loading).then(ret => {\n                    let userInfo = {...ret.data, phone, password};\n                    setCookie(userInfo);\n                    userInfo.user_admin === 'true' ? this.props.history.push(`/admin/adminitemmanage`) : this.props.history.push(`/admin/myitemmanage`);\n                }).catch((err) => {\n                    console.log(err)\n                })\n            }\n\n        })\n    }\n}\n\nexport default Form.create()(Index);","import md5 from 'md5';\nimport {jrFetchPost, jrFetchGet} from '../common';\nimport React, {PureComponent} from 'react'\nimport {getCookie,cookieConfig} from '../Cookie';\n\nimport {Form, Input, Button, message, Row, Col} from 'antd'\n\n\nconst FormItem = Form.Item;\n\nclass AccountManage extends PureComponent {\n    constructor(props, context) {\n        super(props, context);\n        this.state={}\n    }\n\n\n    componentDidMount() {\n        const userInfo = getCookie(cookieConfig);\n           this.setState({\n               phone:userInfo.phone\n           })\n    }\n\n    render() {\n        const {form} = this.props;\n        const {getFieldDecorator} = form;\n        const formItemLayoutShort = {\n            labelCol: {span: 6},\n            wrapperCol: {span: 8},\n        };\n        const formItemLayoutButton = {\n            wrapperCol: {offset: 6},\n        };\n        return (\n            <div className='mainview'>\n                <Row>\n                    <Col span={22} offset={1}>\n                        <h1 className={'title'}>密码修改</h1>\n                    </Col>\n                </Row>\n                <div className='container'>\n                    <Form style={{marginTop: 50}}>\n                        <FormItem\n                            {...formItemLayoutShort}\n                            label=\"登录账号\"\n                        >\n                            <Input disabled={true} value={this.state.phone}/>\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayoutShort}\n                            label=\"当前密码\"\n                        >\n                            {\n                                getFieldDecorator(\"old_pwd\", {\n                                    rules: [\n                                        {required: true, message: '请输入当前密码！'},\n                                    ],\n                                })(\n                                    <Input\n                                        placeholder=\"请输入当前密码\"\n                                    />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayoutShort}\n                            label=\"设置新密码\"\n                        >\n                            {\n                                getFieldDecorator(\"new_pwd_set\", {\n                                    rules: [\n                                        {required: true, message: '请输入新密码！'},\n                                    ],\n                                })(\n                                    <Input\n                                        placeholder=\"请输入6-16位新密码\"\n                                    />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayoutShort}\n                            label=\"确认新密码\"\n                        >\n                            {\n                                getFieldDecorator(\"new_pwd\", {\n                                    rules: [\n                                        {required: true, message: '请确认新密码！'},\n                                    ],\n                                })(\n                                    <Input\n                                        placeholder=\"请输入新密码\"\n                                    />\n                                )\n                            }\n                        </FormItem>\n                        <FormItem\n                            {...formItemLayoutButton}\n                        >\n                            <Button style={{marginRight: 20}} onClick={this.handleClear}>清空</Button>\n                            <Button type=\"primary\" onClick={this.handleSubmit}>确认</Button>\n                        </FormItem>\n                    </Form>\n                </div>\n\n\n            </div>\n        )\n    }\n\n    //发送请求\n    handleSubmit = () => {\n        const {form} = this.props;\n        form.validateFields((err) => {\n            if (!err) {\n                const formObj = form.getFieldsValue();\n                if (formObj.new_pwd_set != formObj.new_pwd) {\n                    message.warn(\"两次新密码输入不同！\");\n                    return;\n                }\n                /*jrFetchPost(\"/ng-open_platform/api/changePwd\", {\n                    new_pwd: md5(formObj.new_pwd + \".mifeng888\"),\n                    old_pwd: md5(formObj.old_pwd + \".mifeng888\"),\n                }).then((ret) => {\n\n                    message.info(\"更改成功！\");\n                })*/\n            }\n        });\n    }\n    //清空\n    handleClear = () => {\n        const {form} = this.props;\n        form.resetFields();\n    }\n}\n\n\nexport default Form.create()(AccountManage);","const styleConfig = {\n    formItemLayout:{\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 8 },\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 12 },\n        },\n    },\n    formItemStyle:{\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 7},\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 17 },\n        },\n    },\n    maxStyle:{\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 3},\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 21 },\n        },\n    },\n    minStyle:{\n        labelCol: {\n            xs: { span: 24 },\n            sm: { span: 5},\n        },\n        wrapperCol: {\n            xs: { span: 24 },\n            sm: { span: 12 },\n        },\n    }\n};\n\nexport default styleConfig;","import React, {Component} from 'react';\nimport {Form, Table} from 'antd'\nimport {getPagination, jrFetchGet} from '../common';\nimport {withRouter} from 'react-router';\nimport {Link} from 'react-router-dom';\n\nclass TableListConfig extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n        this.getItemList()\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        nextProps.dataSource && this.setState({\n            dataSource: nextProps.dataSource\n        })\n    }\n\n    render() {\n        //const {projects: {...projects} = {}} = this.state.dataInfo || {};\n        //项目列表\n        const columns = [\n            {\n                title: 'ID',\n                align: 'center',\n                width: 30,\n                dataIndex: 'id'\n            },\n            {\n                title: '项目',\n                align: 'center',\n                width: 150,\n                dataIndex: 'name',\n                render: (t, r) => {\n                    return (\n                        <Link to={`/admin/itemdetails/?id=${r.id}`}>{t}</Link>\n                    )\n                }\n            },\n            {\n                title: '一级行业',\n                width: 100,\n                align: 'center',\n                dataIndex: 'first_industry',\n                render: (t) => {\n                    const {first_industry} = this.state.dataInfo || {};\n                    return (\n                        <span>{first_industry[t]}</span>\n                    )\n                }\n            },\n            {\n                title: '二级行业',\n                width: 100,\n                align: 'center',\n                dataIndex: 'second_industry',\n                render: (t) => {\n                    return <i>{t === 'null' ? '' : t}</i>\n                }\n            },\n            {\n                title: 'staffing',\n                width: 100,\n                align: 'center',\n                render: (t, r, i) => {\n                    const {users} = t;\n                    return (\n                        <div style={{width: '100%', wordWrap: 'break-word'}}>\n                            {\n                                !!users.length && users.map((it,index) => {\n                                    if(index == users.length-1 ){\n                                        return <span key={it.id}>{it.name}</span>\n                                    }\n                                      return <span key={it.id}>{it.name},</span>\n                                }\n                                )\n                            }\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '轮次',\n                width: 100,\n                align: 'center',\n                dataIndex: 'round',\n                render: (t) => {\n                    const {round} = this.state.dataInfo || {};\n                    return (\n                        <span>{round[t]}</span>\n                    )\n                }\n            },\n            {\n                title: '项目阶段',\n                width: 100,\n                align: 'center',\n                dataIndex: \"phase\",\n                render: (t) => {\n                    const {phase} = this.state.dataInfo || {};\n                    return (\n                        <span>{phase[t]}</span>\n                    )\n                }\n            },\n            {\n                title: '项目状态',\n                width: 100,\n                align: 'center',\n                dataIndex: \"state\",\n                render: (t) => {\n                    const {state} = this.state.dataInfo || {};\n                    return (\n                        <span>{state[t]}</span>\n                    )\n                }\n            },\n            {\n                title: '融资金额',\n                width: 100,\n                align: 'center',\n                render: (t, r, i) => {\n                    const {currency: currency_info} = this.state.dataInfo || {};\n                    const {amount, currency} = t;\n                    return (\n                        amount !== null && <span>{amount}万{currency_info[currency]}</span>\n                    )\n                }\n            },\n            {\n                title: '立项时间',\n                width: 100,\n                align: 'center',\n                dataIndex: 'establish_time',\n                defaultSortOrder: 'descend',\n                /*sorter: (a, b) => {\n                    let {establish_time: a_establish_time} = a;\n                    let {establish_time: b_establish_time} = b;\n                    a_establish_time === null ? a_establish_time = 0 : a_establish_time = a_establish_time.toString().replace(/-/g, '');\n                    b_establish_time === null ? b_establish_time = 0 : b_establish_time = b_establish_time.toString().replace(/-/g, '');\n                    return a_establish_time - b_establish_time\n                },*/\n            }\n        ]\n        return (\n            <Table\n                columns={columns}\n                pagination={false}\n                rowKey={'id'}\n                bordered\n                dataSource={this.state.dataSource || []}\n            />\n        );\n    }\n\n    //获取项目列表\n    getItemList = () => {\n        jrFetchGet(`/ng-lingxi/api/project/internal/list`).then(ret => {\n            const projects = ret.data.projects;\n            let obj = {pageSize: 5, page: 1, dataList: projects,sort:'date'};\n            let {pageLen, dataSource} = getPagination(obj);\n            this.props.fn(ret.data, pageLen)\n            this.setState({\n                dataSource,\n                dataInfo: ret.data\n            })\n        })\n    }\n\n}\n\nconst Tablelist = withRouter(TableListConfig)\nexport default Form.create()(Tablelist);\n\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, Select, Input, DatePicker, LocaleProvider, Pagination} from 'antd'\nimport {jrFetchGet, dateShift, queryNull, getPagination} from '../../../src/pages/common';\nimport styleConfig from '../../config/styleConfig';\nimport {Link} from 'react-router-dom'\nimport {cookieConfig, getCookie} from \"../Cookie\";\nimport TableListConfig from './tableListConfig'\nimport zhCN from \"antd/lib/locale-provider/zh_CN\";\n\nconst FormItem = Form.Item;\nconst {Option} = Select;\n\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n        const userInfo = getCookie(cookieConfig);\n        userInfo && this.setState({\n            user_admin: userInfo.user_admin === 'true'\n        });\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout, minStyle} = styleConfig;\n        const xs = {span: 24}, sm = {span: 8};\n        const {phase = [], users = {}, state = [], round = [], first_industry = []} = this.state.dataList || {};\n        return (\n            <LocaleProvider locale={zhCN}>\n                <div>\n                    <Row>\n                        <Col span={22} offset={1}>\n                            <h1 className={'title'}>{this.state.user_admin ? '项目管理' : '我的项目'}</h1>\n                        </Col>\n                    </Row>\n                    <Form>\n                        <Row>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'项目名称'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('name', {})(\n                                            <Input placeholder=\"请输入项目名称\"/>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'一级行业'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('first_industry', {\n                                            initialValue: 0,\n                                        })(\n                                            <Select placeholder={'请选择一级行业'}>\n                                                {\n                                                    first_industry.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'二级行业'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('second_industry', {})(\n                                            <Input placeholder=\"请输入二级行业\"/>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'轮次'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('round', {\n                                            initialValue: 0,\n                                        })(\n                                            <Select placeholder={'请选择轮次'}>\n                                                {\n                                                    round.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'项目阶段'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('phase', {\n                                            initialValue: 0,\n                                        })(\n                                            <Select placeholder={'请选择准备阶段'}>\n                                                {\n                                                    phase.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'项目状态'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('state', {\n                                            initialValue: 0,\n                                        })(\n                                            <Select placeholder={'请选择项目状态'}>\n                                                {\n                                                    state.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'staffing'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('staffing', {})(\n                                            <Select mode=\"multiple\" placeholder={'请选择项目人员'}>\n                                                {\n                                                    Object.keys(users).map((item, index) => {\n                                                        return <Option key={index} value={item}>{users[item]}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{span: 13}}>\n                                <FormItem label={'立项时间'} {...minStyle}>\n                                    {\n                                        <span>\n                                        {\n                                            getFieldDecorator('start_time', {})(\n                                                <DatePicker style={{width: '42%'}}\n                                                            placeholder=\"开始时间\"\n                                                />\n                                            )\n                                        }\n                                            &nbsp;一&nbsp;\n                                            {\n                                                getFieldDecorator('end_time', {})(\n                                                    <DatePicker style={{width: '42%'}}\n                                                                placeholder=\"结束时间\"\n                                                    />\n                                                )\n                                            }\n                                    </span>\n                                    }\n\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col offset={19}>\n                                <Button type={\"primary\"} size={\"large\"} onClick={this.handleSeek}>搜索</Button>\n                                &nbsp;\n                                &nbsp;\n                                <Button size={\"large\"} onClick={this.handleClear}>重置</Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                    <Row>\n                        <Col offset={1}>\n                            {\n                                this.state.user_admin && <Button type={\"primary\"} size={\"large\"}>\n                                    <Link to={'/admin/additem?id=0'}>新建项目</Link>\n                                </Button>\n                            }\n                        </Col>\n                    </Row>\n                    <Row style={{marginTop: '20px'}}>\n                        <TableListConfig dataSource={this.state.dataSource} fn={this.dataList}/>\n                        <Pagination\n                            className={'pagination'}\n                            size=\"small\"\n                            defaultPageSize={5}\n                            pageSizeOptions={['5', '10', '15']}\n                            total={this.state.pageLen}\n                            showSizeChanger\n                            showQuickJumper\n                            onChange={(v, i) => this.getVule(v, i)}\n                            onShowSizeChange={(v, i) => this.getVule(v, i)}\n                        />\n                    </Row>\n                </div>\n            </LocaleProvider>\n        );\n    }\n\n    //搜索\n    handleSeek = () => {\n        let itemInfo = this.props.form.getFieldsValue();\n        queryNull(itemInfo.start_time) ? itemInfo.start_time = '' : (itemInfo.start_time = dateShift(itemInfo.start_time._d));\n        queryNull(itemInfo.end_time) ? itemInfo.end_time = '' : (itemInfo.end_time = dateShift(itemInfo.end_time._d));\n        jrFetchGet('/ng-lingxi/api/project/internal/list', {\n            ...itemInfo\n        }).then((ret) => {\n            const projects = ret.data.projects;\n            let obj = {pageSize: 5, page: 1, dataList: projects, sort: 'date'};\n            let {pageLen, dataSource} = getPagination(obj);\n            this.setState({\n                dataList:ret.data,\n                dataSource,\n                pageLen\n            })\n        })\n    }\n    //重置\n    handleClear = () => {\n        const {form} = this.props;\n        form.resetFields();\n    }\n    //获取数据\n    dataList = (data, pageLen) => {\n        this.setState({\n            dataList: data,\n            pageLen\n        })\n    }\n    //分页\n    getVule = (page, pageSize) => {\n        let obj = {pageSize, page, dataList:this.state.dataList.projects, sort: 'date'};\n        let {pageLen, dataSource} = getPagination(obj);\n        this.setState({\n            dataSource,\n            pageLen\n        })\n    }\n}\n\nexport default Form.create()(Index);\n","import React, {Component} from 'react';\nimport {Form, Popconfirm, Table, message} from 'antd'\nimport {jrFetchGet} from '../common';\nimport {withRouter} from 'react-router'\n\nclass TableListConfig extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n            more: false\n        }\n    }\n\n    componentDidMount() {\n        this.getUserList()\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        let dataSource = nextProps.dataSource;\n        if (dataSource.constructor === Object) {\n            dataSource = Object.values(nextProps.dataSource)\n        }\n        dataSource.length > 0 && this.setState({\n            dataSource\n        })\n    }\n\n    render() {\n        const columns = [\n            {\n                title: 'ID',\n                align: 'center',\n                width: 20,\n                dataIndex: 'id',\n                defaultSortOrder: 'ascend',\n                sorter: (a, b) => a.id - b.id,\n            },\n            {\n                title: '姓名',\n                align: 'center',\n                width: 100,\n                dataIndex: 'name'\n            },\n            {\n                title: '手机号',\n                width: 100,\n                align: 'center',\n                dataIndex: 'phone'\n            },\n            {\n                title: '邮箱',\n                width: 100,\n                align: 'center',\n                dataIndex: 'email'\n            },\n            {\n                title: '关联项目',\n                align: 'center',\n                width:350,\n                className:'tableword',\n                render: (t, r, i) => {\n                    const {projects} = t;\n                    return (\n                        <div style={{width: '100%', wordWrap: 'break-word'}}>\n                            {\n                                !!projects.length && projects.map((it, index) => {\n                                        if (projects.length > 3) {\n                                            if (index < 3) {\n                                                if (index == 2) {\n                                                    return <span key={it.id}>\n                                                            {it.name}&nbsp;\n                                                        {\n                                                            !this.state.more && <a onClick={this.getProjects}>\n                                                                展开更多\n                                                            </a>\n                                                        }\n                                                    </span>\n                                                }\n                                                return <span key={it.id}>{it.name}&nbsp;</span>\n                                            } else {\n                                                if(index == projects.length-1){\n                                                    return this.state.more && <span key={it.id}>\n                                                            {it.name}&nbsp;\n                                                            <a onClick={this.getProjects}>\n                                                                收起更多\n                                                            </a>\n                                                    </span>\n                                                }\n                                                return this.state.more && <span key={it.id}>{it.name}&nbsp;</span>\n                                            }\n                                        } else {\n                                            return <span key={it.id}>{it.name}&nbsp;</span>\n                                        }\n                                    }\n                                )\n                            }\n\n                        </div>\n                    )\n                }\n            },\n            {\n                title: '操作',\n                align: 'center',\n                width: 200,\n                dataIndex: 'is_active',\n                render: (is_active, record) => {\n                    let config = {\n                        '0': '停用',\n                        '1': '删除',\n                        '2': \"编辑\",\n                        '3': \"启用\",\n                        '4': \"重置密码\",\n                    };\n                    return (\n                        <span>\n                            {\n                                !is_active && <Popconfirm title=\"确定要删除吗？\" onConfirm={\n                                    () => this.handleDelete(record.id, config['1'])\n                                } okText=\"是\" cancelText=\"否\">\n                                    <a href=\"#\">删除</a>\n                                </Popconfirm>\n                            }\n                            &nbsp;&nbsp;\n                            <Popconfirm title=\"确定要编辑吗？\" onConfirm={\n                                () => this.handleEdit(record.id, config['2'])\n                            }\n                                        okText=\"是\"\n                                        cancelText=\"否\">\n                                <a>编辑</a>\n                            </Popconfirm>\n                            &nbsp;&nbsp;\n                            {\n                                !!is_active ? <Popconfirm title=\"确定要停用吗？\" onConfirm={\n                                    () => this.userOff(record.id, config['0'])\n                                }\n                                                          okText=\"是\"\n                                                          cancelText=\"否\">\n                                    <a href=\"#\">停用</a>\n                                </Popconfirm> : <Popconfirm title=\"确定要启用吗？\" onConfirm={\n                                    () => this.userOn(record.id, config['3'])\n                                }\n                                                            okText=\"是\"\n                                                            cancelText=\"否\">\n                                    <a href=\"#\">启用</a>\n                                </Popconfirm>\n                            }&nbsp;&nbsp;\n                            <Popconfirm title=\"确定要重置密码吗？\" onConfirm={\n                                () => this.userReset(record.id, config['4'])\n                            }\n                                        okText=\"是\"\n                                        cancelText=\"否\">\n                                <a href=\"#\">重置密码</a>\n                            </Popconfirm>\n                        </span>\n\n                    )\n                }\n            },\n        ]\n        return (\n            <Table\n                columns={columns}\n                pagination={false}\n                rowKey={'id'}\n                bordered\n                dataSource={this.state.dataSource || []}\n            />\n        );\n    }\n\n    //获取用户列表\n    getUserList = () => {\n        jrFetchGet('/ng-lingxi/api/user/list', {}).then((ret) => {\n            this.setState({\n                dataSource: ret.data\n            })\n        })\n    }\n    //提示窗口\n    overallMessage = (ret, text) => {\n        ret.code === 0 ? message.success(text + '成功') : message.success(text + '失败')\n    }\n    //删除用户\n    handleDelete = (id, text) => {\n        let url = `/ng-lingxi/api/user/delete/${id}`;\n        jrFetchGet(url).then((ret) => {\n            this.overallMessage(ret, text);\n            this.getUserList()\n        })\n    }\n    //用户编辑\n    handleEdit = (id) => {\n        this.props.history.push(`/admin/adduser/?id=${id}`);\n    }\n    //停用\n    userOff = (id, text) => {\n        let url = `/ng-lingxi/api/user/freeze/${id}`;\n        jrFetchGet(url).then((ret) => {\n            this.overallMessage(ret, text);\n            this.getUserList()\n        })\n    }\n    //启用\n    userOn = (id, text) => {\n        let url = `/ng-lingxi/api/user/activate/${id}`;\n        jrFetchGet(url).then((ret) => {\n            this.overallMessage(ret, text);\n            this.getUserList()\n        })\n    }\n    //重置密码\n    userReset = (id, text) => {\n        let url = `/ng-lingxi/api/user/reset/password/${id}`;\n        jrFetchGet(url).then((ret) => {\n            this.overallMessage(ret, text);\n        })\n    }\n    getProjects = () => {\n        this.setState({\n            more: !this.state.more\n        })\n    }\n\n}\n\nconst Tablelist = withRouter(TableListConfig)\nexport default Form.create()(Tablelist);\n\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, Select, Input,} from 'antd'\nimport {jrFetchGet} from '../../../src/pages/common';\nimport styleConfig from '../../config/styleConfig';\nimport TableListConfig from './tableListConfig'\nimport './index.less';\nimport {Link} from \"react-router-dom\";\n\nconst FormItem = Form.Item;\nconst {Option} = Select;\n\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            dataSource: [],\n        }\n    }\n\n    componentDidMount() {\n        jrFetchGet(` /ng-lingxi/api/project/internal/all`).then(res => {\n            this.setState({\n                listData: res\n            })\n        })\n    }\n\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout} = styleConfig;\n        const {data: listData = {}} = this.state.listData || {};\n        return (\n            <div>\n                <Row>\n                    <Col span={22} offset={1}>\n                        <h1 className={'title'}>用户管理</h1>\n                    </Col>\n                </Row>\n                <Form>\n                    <Row>\n                        <Col xs={{span: 24}} sm={{span: 6}}>\n                            <FormItem label={'姓名'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('name')(\n                                        <Input placeholder=\"请输入姓名\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{span: 24}} sm={{span: 6}}>\n                            <FormItem label={'手机号'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('phone')(\n                                        <Input placeholder=\"请输入手机号\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{span: 24}} sm={{span: 6}}>\n                            <FormItem label={'邮箱'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('email')(\n                                        <Input placeholder=\"请输入邮箱\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{span: 24}} sm={{span: 6}}>\n                            <FormItem label={'关联项目'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('project')(\n                                        <Select placeholder={'请选择关联项目'}>\n                                            {\n                                                Object.keys(listData).map((tiem, index) => {\n                                                    return <Option key={index} value={tiem}>{listData[tiem]}</Option>\n                                                })\n                                            }\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={2} offset={22}>\n                            <Button type={'primary'} onClick={this.handleSubmit} size={'large'}>搜索</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col span={3} style={{marginLeft: '10px', marginBottom: '20px'}}>\n                            <Button type={'primary'} size={'large'}>\n                                <Link to={'/admin/adduser/?id=0'}>新增用户</Link>\n                            </Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <TableListConfig dataSource={this.state.dataSource}/>\n                    </Row>\n                </Form>\n            </div>\n        );\n    }\n\n\n    //搜索\n    handleSubmit = () => {\n        let userInfo = this.props.form.getFieldsValue();\n        userInfo.project = userInfo.project &&  Number(userInfo.project);\n        jrFetchGet('/ng-lingxi/api/user/list', {\n            ...userInfo\n        }).then((ret) => {\n            this.setState({\n                dataSource: ret.data\n            })\n        })\n    }\n}\n\nexport default Form.create()(Index);","import React, {Component} from 'react';\nimport {Col, Row} from \"antd\";\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                <Row>\n                    <Col span={22} offset={1}>\n                        <h1 className={'title'}>投资机构库</h1>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Index;","\nimport React, {Component} from 'react';\n//import {Popconfirm} from 'antd'\n\n//项目列表\nconst columns = [\n    {\n        title: 'ID',\n        align: 'center',\n        width: 30,\n        dataIndex: 'id',\n        defaultSortOrder: 'ascend',\n        sorter: (a, b) => a.id - b.id,\n    },\n    {\n        title: '项目',\n        align: 'center',\n        width: 150,\n        dataIndex: 'name'\n    },\n    {\n        title: '一级行业',\n        width: 100,\n        align: 'center',\n        dataIndex: 'phone'\n    },\n    {\n        title: '二级行业',\n        width: 100,\n        align: 'center',\n        dataIndex: 'email'\n    },\n    {\n        title: 'staffing',\n        width: 100,\n        align: 'center',\n        dataIndex: 'email1'\n    },\n    {\n        title: '轮次',\n        width: 100,\n        align: 'center',\n        dataIndex: 'email2'\n    },\n    {\n        title: '项目阶段',\n        width: 100,\n        align: 'center',\n        dataIndex: 'email3'\n    },\n    {\n        title: '项目状态',\n        width: 100,\n        align: 'center',\n        dataIndex: 'email4'\n    },\n    {\n        title: '融资金额',\n        width: 100,\n        align: 'center',\n        dataIndex: 'email5'\n    },\n    {\n        title: '立项时间',\n        width: 100,\n        align: 'center',\n        dataIndex: 'email6'\n    }\n]\n\nexport default columns;\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, Select, Input, Table} from 'antd'\nimport {jrFetchPost, jrFetchGet} from '../../../src/pages/common';\nimport styleConfig from '../../config/styleConfig';\nimport {Link} from \"react-router-dom\";\nimport tableListConfig from './tableListConfig'\n\nconst FormItem = Form.Item;\nconst {Option} = Select;\n\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        const columns = tableListConfig;\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout} = styleConfig;\n        const xs = {span: 24}, sm = {span: 8};\n\n        return (\n            <div>\n                <Row>\n                    <Col span={22} offset={1}>\n                        <h1 className={'title'}>项目公司库</h1>\n                    </Col>\n                </Row>\n                <Form>\n                    <Row>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'项目名称'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('name', {})(\n                                        <Input placeholder=\"请输入项目名称\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'一级行业'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('second_industry', {})(\n                                        <Select placeholder={'请选择一级行业'}>\n                                            <Option value={'1'}>试试</Option>\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'二级行业'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('name', {})(\n                                        <Input placeholder=\"请输入二级行业\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'staffing/录入人'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('second_industry', {})(\n                                        <Select placeholder={'请选择轮次'} mode={\"multiple\"}>\n                                            <Option value={'1'}>试试</Option>\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'跟进状态'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('second_industry', {})(\n                                        <Select placeholder={'请选择准备阶段'}>\n                                            <Option value={'1'}>试试</Option>\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'项目阶段'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('second_industry', {})(\n                                        <Select placeholder={'请选择项目状态'}>\n                                            <Option value={'1'}>试试</Option>\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'历史投资机构'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('second_industry', {})(\n                                        <Select mode=\"multiple\" placeholder={'请选择项目人员'}>\n                                            <Option value={'1'}>试试</Option>\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col offset={20}>\n                            <Button type={\"primary\"} size={\"large\"} onClick={this.handleSeek}>查询</Button>\n                        </Col>\n                    </Row>\n                </Form>\n                <Row>\n                    <Col offset={1}>\n                        <Button type={\"primary\"} size={\"large\"} >\n                            <Link to={'/admin/intentionItem'}>新建外部意向项目</Link>\n                        </Button>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '20px'}}>\n                    <Table\n                        columns={columns}\n                        pagination={false}\n                        rowKey={'id'}\n                        bordered\n                        //dataSource={this.state.dataSource || []}\n                    />\n                </Row>\n            </div>\n        );\n    }\n\n    //搜索\n    handleSeek = () => {\n\n    }\n\n}\n\nexport default Form.create()(Index);","import React, {Component} from 'react';\nimport AdminItemManage from './../AdminItemManage/index';\nclass Index extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div>\n                <AdminItemManage/>\n            </div>\n        );\n    }\n}\n\nexport default Index;","import React, {Component} from 'react';\nimport {Form, Button, DatePicker, Row, Col, Select, Input, LocaleProvider, message, Drawer} from 'antd'\nimport {jrFetchPost, jrFetchGet, equalNull, queryNull, judgeState, dateShift} from '../../../src/pages/common';\nimport styleConfig from '../../config/styleConfig';\nimport zhCN from \"antd/lib/locale-provider/zh_CN\";\nimport moment from 'moment';\nimport './additem.less';\nimport 'moment/locale/zh-cn';\n\nmoment.locale('zh-cn');\n\nconst FormItem = Form.Item;\nconst {Option} = Select;\nconst {TextArea} = Input;\n\nclass Additem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            evolve: false,\n            dataInfo: {},\n            login: false\n        }\n    }\n\n    componentDidMount() {\n        //id：0新建非0编辑\n        let id = Number(this.props.location.search.substr(1).split('=')[1]);\n        this.setState({\n            id\n        })\n        //新增用户获取数据\n        !id && jrFetchGet('/ng-lingxi/api/project/internal/view/create').then((ret) => {\n            ret.data && this.setState({\n                dataInfo: ret.data\n            })\n\n        })\n        //编辑用户获取数据\n        let url = `/ng-lingxi/api/project/internal/view/edit/${id}`\n        !!id && jrFetchGet(url).then(ret => {\n            this.setState({\n                dataInfo: ret.data,\n                stateValue: ret.data.info.state\n            })\n        })\n\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout, formItemStyle, maxStyle} = styleConfig;\n        const xs = {span: 24}, sm = {span: 8};\n        const {contract_state, currency, first_industry, info, names = this.state.dataInfo.users, phase, round, state} = this.state.dataInfo;\n        const {\n            name, pause_reason, amount, staffing, progress, agency_history, second_industry, establish_time, pause_time, currency: info_currency = 1,\n            state: info_state = 0, phase: info_phase = 0, round: info_round = 0, first_industry: infofirst_industry = 0, contract_state: info_contract_state = 0\n        } = info || {};\n        let {stateValue} = this.state;\n        return (\n            <LocaleProvider locale={zhCN}>\n                <div className={'additem '}>\n                    <Row>\n                        <Col span={22} offset={1}>\n                            <h1 className={'title'}>{!!this.state.id ? '编辑项目' : '新建项目'}</h1>\n                        </Col>\n                    </Row>\n                    <Form>\n                        <Row>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'项目名称'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('name', {\n                                            initialValue: name,\n                                            rules: [\n                                                {\n                                                    required: true, message: '必填'\n                                                }\n                                            ]\n\n                                        })(\n                                            <Input placeholder=\"请输入项目名称\"/>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'一级行业'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('first_industry', {\n                                            initialValue: infofirst_industry,\n                                        })(\n                                            <Select>\n                                                {\n                                                    !!first_industry && first_industry.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'二级行业'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('second_industry', {\n                                            initialValue: queryNull(second_industry) ? '' : second_industry,\n                                        })(\n                                            <Input placeholder=\"请输入项目名称\"/>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'轮次'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('round', {\n                                            initialValue: info_round,\n                                        })(\n                                            <Select>\n                                                {\n                                                    !!round && round.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'项目阶段'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('phase', {\n                                            initialValue: info_phase,\n                                        })(\n                                            <Select>\n                                                {\n                                                    phase && phase.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'立项时间'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('establish_time', {\n                                            initialValue: queryNull(establish_time) ? '' : (moment(establish_time, \"YYYY-MM-DD\")),\n                                        })(\n                                            <DatePicker\n                                                placeholder=\"请选择立项时间\"\n                                            />\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'项目状态'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('state', {\n                                            initialValue: info_state\n                                        })(\n                                            <Select onChange={(e) => this.getStateValue(e)}>\n                                                {\n                                                    state && state.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            {\n                                judgeState(stateValue) && <span>\n                                    <Col xs={{...xs}} sm={{...sm}}>\n                                        <FormItem label={stateValue === 2 ? '暂停时间' : 'close时间'} {...formItemLayout}>\n                                            {\n                                                getFieldDecorator('pause_time', {\n                                                    initialValue: equalNull(pause_time) ? '' : (moment(pause_time, \"YYYY-MM-DD\")),\n                                                })(\n                                                    <DatePicker\n                                                        placeholder=\"请选择时间\"\n                                                    />\n                                                )\n                                            }\n                                        </FormItem>\n                                    </Col>\n                                    <Col xs={{...xs}} sm={{...sm}}>\n                                        <FormItem label={stateValue === 2 ? '暂停原因' : 'close原因'} {...formItemLayout}>\n                                            {\n                                                getFieldDecorator('pause_reason', {\n                                                    initialValue: pause_reason\n                                                })(\n                                                    <TextArea placeholder=\"请输入原因\"\n                                                              autosize={{minRows: 2, maxRows: 6}}/>\n                                                )\n                                            }\n                                        </FormItem>\n                                    </Col>\n                                </span>\n                            }\n                        </Row>\n                        <Row>\n                            <Col s={{span: 24}} sm={{span: 9}}>\n                                <FormItem label={'融资金额'} {...formItemStyle}>\n                                    {\n\n                                        <span>\n                                            {\n                                                getFieldDecorator('amount', {\n                                                    initialValue: equalNull(amount) ? '' : amount.toString(),\n                                                })(\n                                                    <Input placeholder=\"请输入额度\" type={'Number'}\n                                                           style={{width: '45%'}}/>\n                                                )\n                                            }\n                                            &nbsp;(万)&nbsp;\n                                            {\n                                                getFieldDecorator('currency', {\n                                                    initialValue: info_currency.toString()\n                                                })(\n                                                    <Select style={{width: '35%'}}>\n                                                        {\n                                                            currency && Object.keys(currency).map((item, index) => {\n                                                                return <Option key={index}\n                                                                               value={item}>{currency[item]}</Option>\n                                                            })\n                                                        }\n                                                    </Select>\n                                                )\n                                            }\n                                        </span>\n\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col s={{span: 24}} sm={{span: 7}}>\n                                <FormItem label={'合同状态'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('contract_state', {\n                                            initialValue: info_contract_state\n                                        })(\n                                            <Select>\n                                                {\n                                                    contract_state && contract_state.map((item, index) => {\n                                                        return <Option key={index} value={index}>{item}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'staffing'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('names', {\n                                            initialValue: staffing && staffing.map(item => item.toString()),\n                                            rules: [\n                                                {\n                                                    required: true, message: '必填'\n                                                }\n                                            ]\n\n                                        })(\n                                            <Select mode={\"multiple\"}>\n                                                {\n                                                    names && Object.keys(names).map((item, index) => {\n                                                        return <Option key={index} value={item}>{names[item]}</Option>\n                                                    })\n                                                }\n                                            </Select>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'历史投资机构'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('agency_history', {\n                                            initialValue: agency_history\n                                        })(\n                                            <TextArea placeholder=\"请输入历史投资机构\" autosize={{minRows: 2, maxRows: 6}}/>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                <FormItem label={'新增进展'} {...formItemLayout}>\n                                    {\n                                        getFieldDecorator('progress', {})(\n                                            <TextArea placeholder=\"请输入最新进展情况\" autosize={{minRows: 2, maxRows: 6}}/>\n                                        )\n                                    }\n                                </FormItem>\n                            </Col>\n                            {\n                                !!this.state.id && <Col xs={{span: 24}} sm={{span: 24}}>\n                                    <FormItem label={'历史进展'} {...maxStyle} >\n                                        {\n                                            !queryNull(progress) &&\n                                            <span>\n\n                                                    <span>\n                                                        <em>{progress['0'].created_at}:</em>{progress['0'].progress}&nbsp;&nbsp;\n                                                        <Button onClick={this.handleShow} type={\"primary\"}\n                                                                size={\"small\"}>\n                                                            {this.state.evolve ? '收起' : '更多'}\n                                                        </Button>\n                                                    </span>\n\n                                                {\n                                                    this.state.evolve &&\n                                                    <Drawer\n                                                        title={'历史进展'}\n                                                        placement='top'\n                                                        closable={false}\n                                                        onClose={this.onClose}\n                                                        visible={true}\n                                                        width='100%'\n                                                        height='auto'\n                                                        mask={false}\n                                                    >\n                                                        <div className={'primaryDiv'}>\n                                                            <Row className={'primaryheader'}>\n                                                                <span>\n                                                                    <Col xs={{...xs}} sm={{span: 4}}><h3>时间</h3></Col>\n                                                                    <Col xs={{...xs}} sm={{span: 20}}\n                                                                         className={'primaryCol'}><h3>进展</h3></Col>\n                                                                </span>\n                                                            </Row>\n                                                            {\n                                                                progress.map((item, index) => {\n                                                                    return <Row className={'primaryContent'}>\n                                                                            <span key={index}>\n                                                                               <Col xs={{...xs}}\n                                                                                    sm={{span: 4}}> <em>{item.created_at}</em></Col>\n                                                                                <Col xs={{...xs}} sm={{span: 20}}\n                                                                                     className={'primaryCol'}> <i>{item.progress}</i> </Col>\n                                                                            </span>\n\n                                                                    </Row>\n                                                                })\n                                                            }\n                                                        </div>\n                                                    </Drawer>\n                                                }\n                                            </span>\n                                        }\n\n                                    </FormItem>\n                                </Col>\n                            }\n                        </Row>\n                        <Row>\n                            <Col sm={{span: 8}} offset={10}>\n                                <Button\n                                    style={{marginRight: '60px', marginTop: '40px'}}\n                                    onClick={() => {this.props.history.goBack();}}\n                                >\n                                    取消\n                                </Button>\n                                <Button type={'primary'} onClick={this.handleSubmit}>保存</Button>\n                            </Col>\n                        </Row>\n                    </Form>\n                </div>\n            </LocaleProvider>\n        );\n    }\n\n\n    //提交\n    handleSubmit = () => {\n        let userInfo = this.props.form.getFieldsValue();\n        queryNull(userInfo.pause_time) ? userInfo.pause_time = '' : (userInfo.pause_time = dateShift(userInfo.pause_time._d));\n        queryNull(userInfo.establish_time) ? userInfo.establish_time = '' : (userInfo.establish_time = dateShift(userInfo.establish_time._d));\n        userInfo.staffing = userInfo.names;\n        delete userInfo.names;\n        if (this.state.id === 0) {//保存\n            this.props.form.validateFields(\n                (err) => {\n                    if (!err) {\n                        jrFetchPost(`/ng-lingxi/api/project/internal/create`, {\n                            ...userInfo\n                        }).then(ret => {\n                            if (ret.code === 0)\n                                message.success('新建成功！', 1, onClose => {\n                                    this.props.history.goBack();\n                                })\n                        })\n                    }\n                }).catch((err) => {\n                console.log(err)\n            })\n        } else {//编辑\n            userInfo.pid = this.state.id;\n            this.props.form.validateFields(\n                (err) => {\n                    if (!err) {\n                        jrFetchPost(`/ng-lingxi//api/project/internal/edit`, {\n                            ...userInfo\n                        }).then(ret => {\n                            if (ret.code === 0)\n                                message.success('编辑成功！', 1, onClose => {\n                                    this.props.history.goBack();\n                                })\n                        })\n                    }\n                }).catch((err) => {\n                console.log(err)\n            })\n        }\n\n    }\n    //显示更多\n    handleShow = () => {\n        this.setState({\n            evolve: !this.state.evolve\n        })\n    }\n    //获取StateValue\n    getStateValue = (e) => {\n        let stateValue = e;\n        this.setState({\n            stateValue\n        })\n    }\n\n}\n\nexport default Form.create()(Additem);","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, Select, Input, message} from 'antd';\nimport md5 from 'md5';\nimport {jrFetchPost, jrFetchGet} from '../../../src/pages/common';\nimport styleConfig from '../../config/styleConfig';\nimport {getCookie, cookieConfig} from '../Cookie';\n\nconst FormItem = Form.Item;\nconst {Option} = Select;\n\nclass AddUser extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            projects_list: []\n        }\n\n    }\n\n    componentDidMount() {\n        let id = Number(this.props.location.search.substr(1).split('=')[1]);\n        const userInfo = getCookie(cookieConfig);\n        this.setState({\n            id\n        })\n        jrFetchGet(`/ng-lingxi/api/project/internal/all`).then(res => {\n            this.setState({\n                projectsData: res\n            })\n        })\n        //新建验证权限\n        if (!id && !userInfo.user_admin) {\n            this.props.history.goBack();\n        }\n        //编辑用户获取数据\n        id && jrFetchGet(`/ng-lingxi/api/user/view/${id}`).then((ret) => {\n            ret.data.user && this.setState({\n                dataUser: ret.data.user,\n                projects_list: Object.keys(ret.data.projects_list)\n\n            })\n        })\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout} = styleConfig;\n        const {name = '', phone = '', email = ''} = this.state.dataUser || {};\n        const projects_list = this.state.projects_list;\n        const {data = {}} = this.state.projectsData || {};\n        return (\n            <div>\n                <Row>\n                    <Col span={22} offset={1}>\n                        <h1 className={'title'}>{!!this.state.id ? '用户编辑' : '用户新增'}</h1>\n                    </Col>\n                </Row>\n                <Form>\n                    <Row>\n                        <Col xs={{span: 24}} sm={{span: 12}}>\n                            <FormItem label={'姓名'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('name', {\n                                        initialValue: name,\n                                        rules: [\n                                            {\n                                                pattern: /^[^\\s]*$/,\n                                                required: true, message: '姓名不能为空不能输入空格'\n                                            }\n\n                                        ]\n                                    })(\n                                        <Input placeholder=\"姓名重复时系统自动添加后缀区别\" />\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{span: 24}} sm={{span: 12}}>\n                            <FormItem label={'手机号'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('phone', {\n                                        initialValue: phone,\n                                        rules: [\n                                            {\n                                                len: 11,\n                                                required: true, message: '请输入11位手机号'\n                                            },\n                                            {\n                                                pattern: /^\\d+$/g,\n                                                message: '手机号必须为数字'\n                                            },\n\n                                        ]\n                                    })(\n                                        <Input placeholder=\"请输入11位手机号\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{span: 24}} sm={{span: 12}}>\n                            <FormItem label={'邮箱'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('email', {\n                                        initialValue: email,\n                                        rules: [\n                                            {\n                                                pattern: /^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/,\n                                                required: true, message: '请输入正确的邮箱xxx@xxx.xxx'\n                                            }\n                                        ]\n                                    })(\n                                        <Input placeholder=\"请输入邮箱\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{span: 24}} sm={{span: 12}}>\n                            <FormItem label={'初始密码'} {...formItemLayout}>\n                                {\n                                    <p>888888</p>\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{span: 24}} sm={{span: 12}}>\n                            <FormItem label={'关联项目'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('projects', {\n                                        initialValue: [...projects_list],\n                                    })(\n                                        <Select mode=\"multiple\" placeholder={'请选择关联项目'}>\n                                            {\n                                                Object.keys(data).map((tiem, index) => {\n                                                    return <Option key={index} value={tiem}>{data[tiem]}</Option>\n                                                })\n                                            }\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm={{span: 8}} offset={10}>\n                            <Button style={{marginRight: '60px', marginTop: '100px'}} onClick={() => {\n                                this.props.history.goBack();\n                            }}>取消</Button>\n                            <Button type={'primary'} onClick={this.handleSubmit}>保存</Button>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        );\n    }\n\n    //提交数据\n    handleSubmit = () => {\n        let userInfo = this.props.form.getFieldsValue();\n        let md5Password = md5(888888);\n        this.props.form.validateFields(\n            (err) => {\n                if (!err) {\n                    userInfo.password = md5Password;\n                    userInfo.uid = this.state.id;\n                    jrFetchPost(`/ng-lingxi/api/user/edit`, {\n                        ...userInfo\n                    }).then(ret => {\n                        if (ret.code === 0)\n                            message.success('操作成功！', 1, onClose => {\n                                this.props.history.goBack();\n                            })\n                    }).catch((err) => {\n                        console.log(err)\n                    })\n                }\n            }\n        );\n    }\n\n    //检测用户名是否重复\n    /*handleBlur = () => {\n        let name = this.props.form.getFieldValue('name');\n        let reg = /^[^\\s]*$/;\n        !(!!this.state.id) &&\n        reg.test(name) &&\n        jrFetchGet('/ng-lingxi/api/user/list', {\n            name\n        }).then((ret) => {\n            if (!(ret.data.length === 0))\n                this.props.form.setFields({name: {value: name + '1'}})\n        })\n    }*/\n}\n\nexport default Form.create()(AddUser);\n\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, Modal, message, Drawer} from 'antd'\nimport {jrFetchGet, queryNull, judgeState} from '../../../../src/pages/common';\nimport {Link} from \"react-router-dom\";\nimport {getCookie} from \"../../Cookie\";\nimport {withRouter} from \"react-router\";\n\nconst confirm = Modal.confirm;\n\nclass ItemSituation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            evolve: false,\n        }\n    }\n\n    componentDidMount() {\n        let {user_admin} = getCookie(['user_admin']);\n        this.setState({\n            id: this.props.id,\n            dataInfo: this.props.dataInfo,\n            user_admin: user_admin === 'true'\n        })\n    }\n\n    componentWillReceiveProps(nextProps, nextContext) {\n        let {id, dataInfo} = nextProps;\n        this.setState({\n            id,\n            dataInfo\n        })\n\n    }\n\n    render() {\n        const xs = {span: 24}, sm = {span: 8};\n        const {info = {}, first_industry, round, phase, state, currency, contract_state, users} = this.state.dataInfo || {};\n        const {\n            name, pause_time, pause_reason, amount, staffing, progress, agency_history, contract_state: info_contract_state, currency: info_currency, first_industry: info_first_industry,\n            second_industry, round: info_round, phase: info_phase, establish_time, state: info_state\n        } = info;\n        return (\n            <div>\n                <Row style={{marginTop: '50px'}}>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>项目名称：</em>{name}</p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p>\n                            <em>一级行业：</em>{first_industry && first_industry[info_first_industry]}\n                        </p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>二级行业：</em>{second_industry}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>轮次：</em>{round && round[info_round]}</p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>项目阶段：</em>{phase && phase[info_phase]}</p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>立项时间：</em>{establish_time}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>项目状态：</em>{state && state[info_state]}</p>\n                    </Col>\n                    {\n                        judgeState(info_state) &&\n                        <span>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                  <p><em>{info_state === 2 ? '暂停时间：' : 'colse时间：'}</em>{pause_time}</p>\n                              </Col>\n                            <Col xs={{...xs}} sm={{...sm}}>\n                                   <p><em>{info_state === 2 ? '暂停原因：' : 'colse原因：'}</em>{pause_reason}</p>\n                             </Col>\n                         </span>\n\n                    }\n\n                </Row>\n                <Row>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p>\n                            <em>融资金额(万)：</em>{queryNull(amount) ? '' : (amount + '万' + currency[info_currency])}\n\n                        </p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p>\n                            <em>合同状态：</em>{contract_state && contract_state[info_contract_state]}\n                        </p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p>\n                            <em>staffing：</em>\n                            <strong>\n                                {\n                                    users && Object.values(staffing).map(i => {\n                                        if (users.hasOwnProperty(i)) {\n                                            return users[i].toString()\n                                        }\n                                    }).toString()\n                                }\n                            </strong>\n                        </p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>历史投资机构：</em>{agency_history}</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={{span: 24}} sm={{span: 24}} className={'maxText'}>\n                      <span>\n                          <em>历史进展：</em>\n                          {\n                              !queryNull(progress) &&\n                              <span>\n                                  <span>\n                                     <em style={{width: 'auto'}}>{progress['0'].created_at}:</em>{progress['0'].progress}&nbsp;&nbsp;\n                                      <Button\n                                          onClick={this.handleShow} type={\"primary\"}\n                                          size={\"small\"}\n                                      >\n                                          {this.state.evolve ? '收起' : '更多'}\n                                      </Button>\n                                  </span>\n                                  {\n                                      this.state.evolve &&\n                                      <Drawer\n                                          title={'历史进展'}\n                                          placement='top'\n                                          closable={false}\n                                          onClose={this.onClose}\n                                          visible={true}\n                                          width='100%'\n                                          height='auto'\n                                          mask={false}\n                                      >\n                                          <div className={'primaryDiv'}>\n                                              <Row className={'primaryheader'}>\n                                                <span>\n                                                    <Col xs={{...xs}} sm={{span: 4}}><h3>时间</h3></Col>\n                                                    <Col\n                                                        xs={{...xs}} sm={{span: 20}}\n                                                        className={'primaryCol'}\n                                                    ><h3>进展</h3>\n                                                    </Col>\n                                                </span>\n                                              </Row>\n                                              {\n                                                  progress.map((item, index) => {\n                                                      return <Row className={'primaryContent'}>\n                                                          <span key={index}>\n                                                              <Col\n                                                                  xs={{...xs}}\n                                                                  sm={{span: 4}}\n                                                              >\n                                                                  <em>{item.created_at}</em>\n                                                              </Col>\n                                                              <Col\n                                                                  xs={{...xs}} sm={{span: 20}}\n                                                                  className={'primaryCol'}\n                                                              >\n                                                                  <i>{item.progress}</i>\n                                                              </Col>\n                                                           </span>\n\n                                                      </Row>\n                                                  })\n                                              }\n                                          </div>\n                                      </Drawer>\n                                  }\n                             </span>\n                          }\n                      </span>\n                    </Col>\n                </Row>\n                <Row className={'situationButton'}>\n                    <Col sm={{span: 8}} offset={10}>\n                        {\n                            this.state.user_admin &&\n                            <Button onClick={() => this.handleRemove(this.state.id, this.props.history)}>删除</Button>\n                        }\n                        <Button type={'primary'}>\n                            <Link to={`/admin/additem/?id=${this.state.id}`}>编辑</Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n    //显示更多\n    handleShow = () => {\n        this.setState({\n            evolve: !this.state.evolve\n        })\n    }\n    //删除\n    handleRemove = (id, props) => {\n        confirm({\n            title: '确定要删除吗?',\n            okText: '确定',\n            cancelText: \"取消\",\n            onOk() {\n                let url = `/ng-lingxi/api/project/internal/delete/${id}`\n                jrFetchGet(url).then(ret => {\n                    if (ret.code === 0)\n                        message.success('删除成功', 1, () => {\n                            props.goBack()\n                        })\n\n                }).catch((err) => {\n                    console.log(err)\n                })\n            },\n            onCancel() {\n            },\n        });\n    }\n\n}\n\nconst ItemSituations = withRouter(ItemSituation)\nexport default Form.create()(ItemSituations);","import React, {Component} from 'react';\nimport {Col, Form, Row, Progress, Input, Select} from 'antd'\nimport {jrFetchPost, jrFetchGet} from '../../../../src/pages/common';\nimport styleConfig from '../../../config/styleConfig';\n\nconst FormItem = Form.Item;\n\nconst {Option} = Select;\n\nclass ItemTl extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout,minStyle} = styleConfig;\n        const xs = {span: 24}, sm = {span: 6};\n        return (\n            <div className={'itemTl'}>\n                <Form>\n                    <Row>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <div>\n                                <em>已推送机构：</em>\n                                <b>18</b>\n                                <p>\n                                    <Progress type=\"circle\" percent={30} width={50} strokeColor={'#199ED8'} />\n                                </p>\n                            </div>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <div>\n                                <em>已开会机构:</em>\n                                <b>18</b>\n                                <p>\n                                    <Progress type=\"circle\" percent={30} width={50} strokeColor={'#199ED8'} />\n                                </p>\n                            </div>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <div>\n                                <em>在跟进机构：</em>\n                                <b>18</b>\n                                <p>\n                                    <Progress type=\"circle\" percent={30} width={50} strokeColor={'#199ED8'} />\n                                </p>\n                            </div>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <div>\n                                <em>待排会机构：</em>\n                                <b>18</b>\n                                <p>\n                                    <Progress type=\"circle\" percent={30} width={50} strokeColor={'#199ED8'} />\n                                </p>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{...xs}} sm={{span:8}}>\n                            <FormItem label={'投资机构'} {...minStyle}>\n                                {\n                                    getFieldDecorator('name', {\n                                    })(\n                                        <Input placeholder=\"姓名重复时系统自动添加后缀区别\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{span:8}}>\n                            <FormItem label={'参会人'} {...minStyle}>\n                                {\n                                    getFieldDecorator('name1', {\n                                    })(\n                                        <Select mode=\"multiple\" placeholder={'请选择参会人'}>\n                                            <Option value={'1'}>金融</Option>\n                                            <Option value={'2'}>金融2</Option>\n                                            <Option value={'3'}>金融3</Option>\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{span:8}}>\n                            <FormItem label={'事件状态'} {...minStyle}>\n                                {\n                                    getFieldDecorator('name2', {\n                                    })(\n                                        <Select  placeholder={'请选择事件状态'}>\n                                            <Option value={'1'}>金融</Option>\n                                            <Option value={'2'}>金融2</Option>\n                                            <Option value={'3'}>金融3</Option>\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                    </Row>\n                </Form>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(ItemTl);\n","import React, {Component} from 'react';\nimport {Form, Row, Col, Tabs} from 'antd'\nimport ItemSituation from './itemDetails/itemSituation';\nimport ItemTl from './itemDetails/itemTL';\nimport './index.less'\nimport {jrFetchGet} from \"../common\";\n\nconst TabPane = Tabs.TabPane;\n\nclass ItemDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {}\n    }\n\n    componentDidMount() {\n        let id = Number(this.props.location.search.substr(1).split('=')[1]);\n        this.setState({\n            id\n        })\n        let url = `/ng-lingxi/api/project/internal/view/sketch/${id}`;\n        id && jrFetchGet(url, {}).then(ret => {\n            this.setState({\n                id,\n                dataInfo: ret.data\n            })\n        })\n    }\n\n    render() {\n        const xs = {span: 24}, sm = {span: 8};\n        const {info: {name} = {}} = this.state.dataInfo || {};\n        return (\n            <div>\n                <Row>\n                    <Col span={22} offset={1}>\n                        <h1 className={'title'}>{name}</h1>\n                    </Col>\n                    <Col span={22} offset={1}>\n                        <Tabs type=\"card\" defaultActiveKey=\"1\" animated>\n                            <TabPane tab=\"概况\" key=\"1\" className={'tabPane'}>\n                                <ItemSituation id={this.state.id} dataInfo={this.state.dataInfo}/>\n                            </TabPane>\n                            <TabPane tab=\"TL\" key=\"2\">\n                                <ItemTl/>\n                            </TabPane>\n                            <TabPane tab=\"资料\" key=\"3\">资料</TabPane>\n                        </Tabs>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(ItemDetails);\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col} from 'antd'\nimport {jrFetchPost, jrFetchGet} from '../../../src/pages/common';\nimport styleConfig from '../../config/styleConfig';\n\nimport './index.less';\nimport {Link} from \"react-router-dom\";\n\n\nclass ItemDetails extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout} = styleConfig;\n        let xs = {span: 24}, sm = {span: 8};\n        return (\n            <div className={'tabPane'}>\n                <Row>\n                    <Col span={22} offset={1}>\n                        <h1 className={'title'}>外部意向项目详情</h1>\n                    </Col>\n                </Row>\n                <Row style={{marginTop: '50px'}}>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>项目名称：</em>百维科技</p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>一级行业：</em>金融</p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>二级行业：</em>贷款超市</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>录入人：</em>张艺</p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>跟进状态：</em>外部意向-重点关注</p>\n                    </Col>\n                    <Col xs={{...xs}} sm={{...sm}}>\n                        <p><em>历史投资机构：</em>腾讯投资</p>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col sm={{span: 8}} offset={10}>\n                        <Button onClick={this.handleRemove}\n                                style={{marginRight: '60px', marginTop: '40px'}}>删除</Button>\n                        <Button type={'primary'} >\n                            <Link to={'/admin/addintentionitem'}>编辑</Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n\n}\n\nexport default Form.create()(ItemDetails);\n","import React, {Component} from 'react';\nimport {Form, Button, Row, Col, Select, Input} from 'antd'\nimport {jrFetchPost, jrFetchGet} from '../../../src/pages/common';\nimport styleConfig from '../../config/styleConfig';\nimport {Link} from \"react-router-dom\";\n\nconst FormItem = Form.Item;\nconst {Option} = Select;\nconst {TextArea} = Input;\n\nclass AddIntentionItem extends Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        const {getFieldDecorator} = this.props.form;\n        const {formItemLayout} = styleConfig;\n        let xs = {span: 24}, sm = {span: 8};\n        return (\n            <div className={'tabPane'}>\n                <Form>\n                    <Row>\n                        <Col span={22} offset={1}>\n                            <h1 className={'title'}>新建/编辑外部意向项目</h1>\n                        </Col>\n                    </Row>\n                    <Row style={{marginTop: '50px'}}>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'项目名称'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('name', {\n                                        //initialValue: info && info.name,\n                                        rules: [\n                                            {\n                                                required: true, message: '必填'\n                                            }\n                                        ]\n\n                                    })(\n                                        <Input placeholder=\"请输入项目名称\"/>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n                            <FormItem label={'一级行业'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('first_industry', {\n                                        //initialValue: info && info.first_industry,\n                                    })(\n                                        <Select>\n                                            {/* {\n                                                first_industry && first_industry.map((item, index) => {\n                                                    return <Option key={index} value={index}>{item}</Option>\n                                                })\n                                            }*/}\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n\n                            <FormItem label={'二级行业'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('second_industry', {\n                                        //initialValue: info && info.second_industry,\n                                    })(\n                                        <Input placeholder=\"请输入项目名称\"/>\n                                    )\n                                }\n                            </FormItem>\n\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs={{...xs}} sm={{...sm}}>\n\n                            <FormItem label={'录入人'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('names', {\n                                        //initialValue: info && info.staffing.map(item => item.toString()),\n                                        rules: [\n                                            {\n                                                required: true, message: '必填'\n                                            }\n                                        ]\n\n                                    })(\n                                        <Select mode={\"multiple\"}>\n                                            {/* {\n                                                    names && Object.keys(names).map((item, index) => {\n                                                        return <Option key={index} value={item}>{names[item]}</Option>\n                                                    })\n                                                }*/}\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n\n                            <FormItem label={'跟进状态'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('names', {})(\n                                        <Select mode={\"multiple\"}>\n\n                                        </Select>\n                                    )\n                                }\n                            </FormItem>\n\n                        </Col>\n                        <Col xs={{...xs}} sm={{...sm}}>\n\n                            <FormItem label={'历史投资机构'} {...formItemLayout}>\n                                {\n                                    getFieldDecorator('agency_history', {\n                                        //initialValue: info && info.agency_history\n                                    })(\n                                        <TextArea placeholder=\"请输入历史投资机构\" autosize={{minRows: 2, maxRows: 6}}/>\n                                    )\n                                }\n                            </FormItem>\n\n                        </Col>\n                    </Row>\n                </Form>\n                <Row>\n                    <Col sm={{span: 8}} offset={10}>\n                        <Button onClick={this.handleSubmit} type={'primary'}\n                                style={{marginRight: '60px', marginTop: '40px'}}>保存</Button>\n                        <Button>\n                            <Link to={'/admin/itemwarehouse'}>取消</Link>\n                        </Button>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default Form.create()(AddIntentionItem);\n","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport App from './App';\nimport Login from './pages/Login';\nimport Admin from './admin';\nimport AccountManage from './pages/AccountManage/resetPassword';\nimport AdminItemManage from './pages/AdminItemManage';\nimport AdminUserManage from './pages/AdminUserManage';\nimport InvestWarehouse from './pages/InvestWarehouse';\nimport ItemWarehouse from './pages/ItemWarehouse';\nimport MyItemManage from './pages/MyItemManage';\nimport AddItem from './pages/AdminItemManage/additem';\nimport AddUser from './pages/AdminUserManage/addUser';\nimport ItemDetails from './pages/MyItemManage/itemDetails';\nimport IntentionItem from './pages/ItemWarehouse/intentionItem';\nimport AddIntentionItem from './pages/ItemWarehouse/addIntentionItem';\n\nclass myRouter extends Component {\n\n\n    render() {\n        return (\n            <Router>\n                <App>\n                    <Switch>\n                        <Route path={'/login'} component={Login}/>\n                        <Route path={'/admin'} render={() =>\n                            <Admin>\n                                <Switch>\n                                    <Route path={'/admin/adduser'} component={AddUser}/>\n                                    <Route path={'/admin/additem'} component={AddItem}/>\n                                    <Route path={'/admin/itemdetails'} component={ItemDetails}/>\n                                    <Route path={'/admin/intentionItem'} component={IntentionItem}/>\n                                    <Route path={'/admin/addintentionitem'} component={AddIntentionItem}/>\n                                    <Route path={'/admin/adminusermanage'} component={AdminUserManage}/>\n                                    <Route path={'/admin/adminitemmanage'} component={AdminItemManage}/>\n                                    <Route path={'/admin/accountmanage'} component={AccountManage}/>\n                                    <Route path={'/admin/investwarehouse'} component={InvestWarehouse}/>\n                                    <Route path={'/admin/itemwarehouse'} component={ItemWarehouse}/>\n                                    <Route path={'/admin/myitemmanage'} component={MyItemManage}/>\n                                </Switch>\n                            </Admin>\n                        }/>\n                        <Route path={'/'} component={Login}/>\n                    </Switch>\n\n                </App>\n            </Router>\n        );\n    }\n}\n\nexport default myRouter;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport MyRouter from \"./router\";\n\nReactDOM.render(<MyRouter/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}